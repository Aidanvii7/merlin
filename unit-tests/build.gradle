apply plugin: 'java'

repositories {
    mavenCentral()
    mavenLocal()
    def sdkDir = getSdkDir()
    if (sdkDir != null) {
        ivy {
            url sdkDir + "/extras/android/m2repository/"
            layout "maven"
        }
    }
}

def getSdkDir() {
    def localProperties = new File(rootDir, "local.properties")
    def sdkDir = null;
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        sdkDir = properties.getProperty('sdk.dir')
    }

    if (sdkDir == null) {
        sdkDir = "$System.env.ANDROID_HOME"
    }

    sdkDir
}

dependencies {
    def coreProject = project(":core")
    compile coreProject
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile coreProject.android.libraryVariants.toList().first().javaCompile.classpath
    testCompile coreProject.android.libraryVariants.toList().first().javaCompile.outputs.files
    testCompile files(coreProject.plugins.findPlugin("android-library").getBootClasspath())

    testCompile 'org.robolectric:robolectric:2.3'
    testCompile 'org.easytesting:fest-assert-core:2.0M8'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    inputs.files file("AndroidManifest.xml")
    doFirst {
        copy {
            from project(":core").file("src/main/AndroidManifest.xml")
            into projectDir
        }
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Should.class"
}

buildscript {
    repositories {
        mavenCentral()
    }
}
